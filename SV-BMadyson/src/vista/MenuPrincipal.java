/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import dao.Conexion;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hoarlos
 */
public class MenuPrincipal extends javax.swing.JFrame {

    Conexion cc = new Conexion();
    private DefaultTableModel mdlTblDVenta, mdlVVentas;

    public MenuPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("SISTEMA DE VENTAS");
        tabla();
        numeroBoleta();
        tablaRV();
    }

    public void tabla() {
        mdlTblDVenta = (DefaultTableModel) tblDVenta.getModel();
        jSPDVenta.getViewport().setBackground(Color.white);
    }

    public void tablaRV() {
        mdlVVentas = (DefaultTableModel) tblVVenta.getModel();
        jSPReVenta.getViewport().setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpBase = new javax.swing.JPanel();
        jpSistemaon = new javax.swing.JPanel();
        jpMenu = new javax.swing.JPanel();
        btnJpVenta = new javax.swing.JButton();
        btnJpMClientes = new javax.swing.JButton();
        btnJpMProductos = new javax.swing.JButton();
        btnJpMEmpleados = new javax.swing.JButton();
        btnJpReportes = new javax.swing.JButton();
        jpCardOpc = new javax.swing.JPanel();
        jpRealizarVenta = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        lblNBoleta = new javax.swing.JLabel();
        jpBuscarProducto = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        txtSNombreProd = new javax.swing.JTextField();
        btnSeleccionarProd = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        txtSStock = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        txtSPrecioProd = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        btnAgregarPedido = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        spiSCantidad = new javax.swing.JSpinner();
        jLabel61 = new javax.swing.JLabel();
        txtSCodPro = new javax.swing.JTextField();
        jSPDVenta = new javax.swing.JScrollPane();
        tblDVenta = new javax.swing.JTable();
        jpBuscarCliente = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        txtSNombreCli = new javax.swing.JTextField();
        btnSeleccionarCli = new javax.swing.JButton();
        jLabel59 = new javax.swing.JLabel();
        txtSCodCli = new javax.swing.JTextField();
        btnRegistrarVenta = new javax.swing.JButton();
        jLabel57 = new javax.swing.JLabel();
        txtMontoFinal = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jdcFechaBoleta = new com.toedter.calendar.JDateChooser();
        btnQuitarPedido = new javax.swing.JButton();
        lblAtendidoPor = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        lblSCodEmpleado = new javax.swing.JLabel();
        jpReportes = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jpVerVentas = new javax.swing.JPanel();
        jSPReVenta = new javax.swing.JScrollPane();
        tblVVenta = new javax.swing.JTable();
        btnImpVentas = new javax.swing.JButton();
        btnCalcularGanancia = new javax.swing.JButton();
        txtGanancia = new javax.swing.JTextField();
        btnMostrarDetalleVenta = new javax.swing.JButton();
        btnMostrarTodasVentas = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cboVFecha = new javax.swing.JComboBox<>();
        jpTitulo = new javax.swing.JPanel();
        lblNombNegocio = new javax.swing.JLabel();
        lblIcoUser = new javax.swing.JLabel();
        lblNombUser = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnSistema = new javax.swing.JMenu();
        mnItemCerrarSesion = new javax.swing.JMenuItem();
        mnItemSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpBase.setLayout(new java.awt.CardLayout());

        jpSistemaon.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpMenu.setBackground(new java.awt.Color(51, 51, 51));
        jpMenu.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 1, new java.awt.Color(255, 255, 255)));

        btnJpVenta.setBackground(new java.awt.Color(204, 204, 204));
        btnJpVenta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnJpVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/venta32x32.png"))); // NOI18N
        btnJpVenta.setText("REALIZAR VENTA");
        btnJpVenta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnJpVenta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnJpVenta.setHideActionText(true);
        btnJpVenta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnJpVenta.setMargin(new java.awt.Insets(20, 10, 10, 10));
        btnJpVenta.setPreferredSize(new java.awt.Dimension(150, 80));
        btnJpVenta.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnJpVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJpVentaActionPerformed(evt);
            }
        });
        jpMenu.add(btnJpVenta);

        btnJpMClientes.setBackground(new java.awt.Color(204, 204, 204));
        btnJpMClientes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnJpMClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/user32x32.png"))); // NOI18N
        btnJpMClientes.setText("CLIENTES");
        btnJpMClientes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnJpMClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnJpMClientes.setHideActionText(true);
        btnJpMClientes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnJpMClientes.setMargin(new java.awt.Insets(20, 10, 10, 10));
        btnJpMClientes.setPreferredSize(new java.awt.Dimension(150, 80));
        btnJpMClientes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnJpMClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJpMClientesActionPerformed(evt);
            }
        });
        jpMenu.add(btnJpMClientes);

        btnJpMProductos.setBackground(new java.awt.Color(204, 204, 204));
        btnJpMProductos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnJpMProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/compra32x32.png"))); // NOI18N
        btnJpMProductos.setText("PRODUCTOS");
        btnJpMProductos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnJpMProductos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnJpMProductos.setHideActionText(true);
        btnJpMProductos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnJpMProductos.setMargin(new java.awt.Insets(20, 10, 10, 10));
        btnJpMProductos.setPreferredSize(new java.awt.Dimension(150, 80));
        btnJpMProductos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnJpMProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJpMProductosActionPerformed(evt);
            }
        });
        jpMenu.add(btnJpMProductos);

        btnJpMEmpleados.setBackground(new java.awt.Color(204, 204, 204));
        btnJpMEmpleados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnJpMEmpleados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/cajero32x32.png"))); // NOI18N
        btnJpMEmpleados.setText("EMPLEADOS");
        btnJpMEmpleados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnJpMEmpleados.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnJpMEmpleados.setHideActionText(true);
        btnJpMEmpleados.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnJpMEmpleados.setMargin(new java.awt.Insets(20, 10, 10, 10));
        btnJpMEmpleados.setPreferredSize(new java.awt.Dimension(150, 80));
        btnJpMEmpleados.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnJpMEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJpMEmpleadosActionPerformed(evt);
            }
        });
        jpMenu.add(btnJpMEmpleados);

        btnJpReportes.setBackground(new java.awt.Color(204, 204, 204));
        btnJpReportes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnJpReportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/reporte32x32.png"))); // NOI18N
        btnJpReportes.setText("REPORTES");
        btnJpReportes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnJpReportes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnJpReportes.setHideActionText(true);
        btnJpReportes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnJpReportes.setMargin(new java.awt.Insets(20, 10, 10, 10));
        btnJpReportes.setPreferredSize(new java.awt.Dimension(150, 80));
        btnJpReportes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnJpReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJpReportesActionPerformed(evt);
            }
        });
        jpMenu.add(btnJpReportes);

        jpSistemaon.add(jpMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 600));

        jpCardOpc.setLayout(new java.awt.CardLayout());

        jpRealizarVenta.setBackground(new java.awt.Color(255, 255, 255));
        jpRealizarVenta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel23.setText("N° DE BOLETA:");
        jpRealizarVenta.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, 30));

        lblNBoleta.setBackground(new java.awt.Color(255, 255, 255));
        lblNBoleta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNBoleta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNBoleta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpRealizarVenta.add(lblNBoleta, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 18, 220, 34));

        jpBuscarProducto.setBackground(new java.awt.Color(255, 255, 255));
        jpBuscarProducto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SELECCIONAR PRODUCTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jpBuscarProducto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel52.setText("CANTIDAD:");
        jpBuscarProducto.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 100, 30));

        txtSNombreProd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSNombreProd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSNombreProd.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jpBuscarProducto.add(txtSNombreProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 350, 30));

        btnSeleccionarProd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSeleccionarProd.setText("CONSULTAR");
        btnSeleccionarProd.setMaximumSize(new java.awt.Dimension(180, 50));
        btnSeleccionarProd.setMinimumSize(new java.awt.Dimension(180, 50));
        btnSeleccionarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarProdActionPerformed(evt);
            }
        });
        jpBuscarProducto.add(btnSeleccionarProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 25, 150, 30));

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel53.setText("PRODUCTO:");
        jpBuscarProducto.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 100, 30));

        txtSStock.setEditable(false);
        txtSStock.setBackground(new java.awt.Color(255, 255, 255));
        txtSStock.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSStock.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSStock.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jpBuscarProducto.add(txtSStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 80, 30));

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel54.setText("PRECIO: S/");
        jpBuscarProducto.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 100, 25));

        txtSPrecioProd.setEditable(false);
        txtSPrecioProd.setBackground(new java.awt.Color(255, 255, 255));
        txtSPrecioProd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSPrecioProd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSPrecioProd.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jpBuscarProducto.add(txtSPrecioProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 80, 30));

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel55.setText("STOCK:");
        jpBuscarProducto.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 60, 25));

        btnAgregarPedido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAgregarPedido.setText("AGREGAR PEDIDO");
        btnAgregarPedido.setMaximumSize(new java.awt.Dimension(180, 50));
        btnAgregarPedido.setMinimumSize(new java.awt.Dimension(180, 50));
        btnAgregarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPedidoActionPerformed(evt);
            }
        });
        jpBuscarProducto.add(btnAgregarPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 195, 200, 40));
        jpBuscarProducto.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 480, 10));

        spiSCantidad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jpBuscarProducto.add(spiSCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 70, 30));

        jLabel61.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel61.setText("CÓDIGO:");
        jpBuscarProducto.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 45, 100, 30));

        txtSCodPro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSCodPro.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSCodPro.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jpBuscarProducto.add(txtSCodPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 45, 150, 30));

        jpRealizarVenta.add(jpBuscarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, 550, 250));

        tblDVenta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblDVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Producto", "Precio", "Cantidad", "Importe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDVenta.setOpaque(false);
        tblDVenta.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tblDVenta.setSelectionForeground(new java.awt.Color(255, 255, 0));
        tblDVenta.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jSPDVenta.setViewportView(tblDVenta);

        jpRealizarVenta.add(jSPDVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 340, 820, 220));

        jpBuscarCliente.setBackground(new java.awt.Color(255, 255, 255));
        jpBuscarCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SELECCIONAR CLIENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jpBuscarCliente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel56.setText("CODIGO:");
        jpBuscarCliente.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 35, 80, 30));

        txtSNombreCli.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSNombreCli.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSNombreCli.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jpBuscarCliente.add(txtSNombreCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 300, 30));

        btnSeleccionarCli.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSeleccionarCli.setText("CONSULTAR");
        btnSeleccionarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarCliActionPerformed(evt);
            }
        });
        jpBuscarCliente.add(btnSeleccionarCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 25, 150, 30));

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel59.setText("CLIENTE:");
        jpBuscarCliente.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 80, 30));

        txtSCodCli.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSCodCli.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSCodCli.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jpBuscarCliente.add(txtSCodCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 150, 30));

        jpRealizarVenta.add(jpBuscarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 200, 490, 130));

        btnRegistrarVenta.setBackground(new java.awt.Color(255, 255, 255));
        btnRegistrarVenta.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnRegistrarVenta.setText("REGISTRAR VENTA");
        btnRegistrarVenta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegistrarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarVentaActionPerformed(evt);
            }
        });
        jpRealizarVenta.add(btnRegistrarVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 500, 200, 50));

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel57.setText("MONTO FINAL:");
        jpRealizarVenta.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 400, 160, -1));

        txtMontoFinal.setBackground(new java.awt.Color(0, 0, 0));
        txtMontoFinal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtMontoFinal.setForeground(new java.awt.Color(255, 255, 0));
        txtMontoFinal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMontoFinal.setText("0");
        txtMontoFinal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpRealizarVenta.add(txtMontoFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 425, 170, 50));

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel58.setText("SELECCIONAR FECHA:");
        jpRealizarVenta.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 170, 30));

        jdcFechaBoleta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jpRealizarVenta.add(jdcFechaBoleta, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 220, 30));

        btnQuitarPedido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnQuitarPedido.setText("QUITAR PEDIDO");
        btnQuitarPedido.setMaximumSize(new java.awt.Dimension(180, 50));
        btnQuitarPedido.setMinimumSize(new java.awt.Dimension(180, 50));
        btnQuitarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarPedidoActionPerformed(evt);
            }
        });
        jpRealizarVenta.add(btnQuitarPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 340, 160, 40));

        lblAtendidoPor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAtendidoPor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAtendidoPor.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jpRealizarVenta.add(lblAtendidoPor, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 355, 30));

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel60.setText("ATENDIDO POR:");
        jpRealizarVenta.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 120, 30));

        jTextField1.setBackground(new java.awt.Color(0, 0, 0));
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 0));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("S/");
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpRealizarVenta.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 425, 32, 50));

        lblSCodEmpleado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSCodEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        lblSCodEmpleado.setEnabled(false);
        jpRealizarVenta.add(lblSCodEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, 1, 1));

        jpCardOpc.add(jpRealizarVenta, "card2");

        jTabbedPane2.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane2.setForeground(new java.awt.Color(0, 0, 51));
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTabbedPane2.setPreferredSize(new java.awt.Dimension(1140, 600));
        jTabbedPane2.setRequestFocusEnabled(false);

        jpVerVentas.setBackground(new java.awt.Color(255, 255, 255));
        jpVerVentas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jpVerVentas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSPReVenta.setOpaque(false);

        tblVVenta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblVVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N° VENTA", "COD. CLI.", "CLIENTE", "FECHA", "TOTAL", "COD. VEND.", "VENDEDOR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVVenta.setOpaque(false);
        tblVVenta.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jSPReVenta.setViewportView(tblVVenta);

        jpVerVentas.add(jSPReVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 950, 340));

        btnImpVentas.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnImpVentas.setText("IMPRIMIR");
        btnImpVentas.setEnabled(false);
        jpVerVentas.add(btnImpVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 490, 190, 40));

        btnCalcularGanancia.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnCalcularGanancia.setText("CALCULAR TOTAL");
        btnCalcularGanancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularGananciaActionPerformed(evt);
            }
        });
        jpVerVentas.add(btnCalcularGanancia, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 490, 190, 40));

        txtGanancia.setEditable(false);
        txtGanancia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtGanancia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGanancia.setText("S/ ");
        jpVerVentas.add(txtGanancia, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 490, 180, 40));

        btnMostrarDetalleVenta.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnMostrarDetalleVenta.setText("VER DETALLE");
        btnMostrarDetalleVenta.setPreferredSize(new java.awt.Dimension(200, 40));
        btnMostrarDetalleVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarDetalleVentaActionPerformed(evt);
            }
        });
        jpVerVentas.add(btnMostrarDetalleVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 490, -1, -1));

        btnMostrarTodasVentas.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnMostrarTodasVentas.setText("MOSTRAR TODO");
        btnMostrarTodasVentas.setPreferredSize(new java.awt.Dimension(200, 40));
        btnMostrarTodasVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarTodasVentasActionPerformed(evt);
            }
        });
        jpVerVentas.add(btnMostrarTodasVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 200, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("MOSTRAR POR FECHA:");
        jpVerVentas.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 200, 40));

        cboVFecha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jpVerVentas.add(cboVFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, 200, 40));

        jTabbedPane2.addTab("VER VENTAS  ", new javax.swing.ImageIcon(getClass().getResource("/iconos/bolsa-de-la-compra.png")), jpVerVentas); // NOI18N

        jpReportes.add(jTabbedPane2);

        jpCardOpc.add(jpReportes, "card4");

        jpSistemaon.add(jpCardOpc, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 1140, 600));

        jpBase.add(jpSistemaon, "card3");

        jpTitulo.setBackground(new java.awt.Color(0, 0, 0));
        jpTitulo.setMaximumSize(new java.awt.Dimension(1300, 60));
        jpTitulo.setMinimumSize(new java.awt.Dimension(1300, 60));
        jpTitulo.setPreferredSize(new java.awt.Dimension(1300, 60));
        jpTitulo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNombNegocio.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblNombNegocio.setForeground(new java.awt.Color(255, 255, 255));
        lblNombNegocio.setText("BODEGA MADYSON");
        jpTitulo.add(lblNombNegocio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 920, 40));

        lblIcoUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIcoUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/admin32x32.png"))); // NOI18N
        jpTitulo.add(lblIcoUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 10, 40, 40));

        lblNombUser.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblNombUser.setForeground(new java.awt.Color(255, 255, 255));
        lblNombUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombUser.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jpTitulo.add(lblNombUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 10, 200, 40));

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jMenuBar1.setMaximumSize(new java.awt.Dimension(1300, 20));
        jMenuBar1.setMinimumSize(new java.awt.Dimension(1300, 20));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(1300, 20));

        mnSistema.setBackground(new java.awt.Color(255, 255, 255));
        mnSistema.setText("SISTEMA");
        mnSistema.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mnSistema.setPreferredSize(new java.awt.Dimension(200, 21));

        mnItemCerrarSesion.setBackground(new java.awt.Color(255, 255, 255));
        mnItemCerrarSesion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mnItemCerrarSesion.setText("CERRAR SESIÓN");
        mnItemCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnItemCerrarSesionActionPerformed(evt);
            }
        });
        mnSistema.add(mnItemCerrarSesion);

        mnItemSalir.setBackground(new java.awt.Color(255, 255, 255));
        mnItemSalir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mnItemSalir.setText("SALIR");
        mnItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnItemSalirActionPerformed(evt);
            }
        });
        mnSistema.add(mnItemSalir);

        jMenuBar1.add(mnSistema);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1300, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jpTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jpBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jpTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jpBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnItemCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnItemCerrarSesionActionPerformed
        cerrarSesion();
    }//GEN-LAST:event_mnItemCerrarSesionActionPerformed

    private void mnItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnItemSalirActionPerformed
        salirSistema();
    }//GEN-LAST:event_mnItemSalirActionPerformed

    private void btnJpVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJpVentaActionPerformed
        cambiarJPanel(jpCardOpc, jpRealizarVenta);
    }//GEN-LAST:event_btnJpVentaActionPerformed

    private void btnJpReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJpReportesActionPerformed
        cambiarJPanel(jpCardOpc, jpReportes);
    }//GEN-LAST:event_btnJpReportesActionPerformed

    private void btnSeleccionarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarProdActionPerformed
        initProd();
    }//GEN-LAST:event_btnSeleccionarProdActionPerformed

    private void btnSeleccionarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarCliActionPerformed
        initCli();
    }//GEN-LAST:event_btnSeleccionarCliActionPerformed

    private void btnRegistrarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarVentaActionPerformed
        registrarVenta();
    }//GEN-LAST:event_btnRegistrarVentaActionPerformed

    private void btnJpMClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJpMClientesActionPerformed

        initCli();
    }//GEN-LAST:event_btnJpMClientesActionPerformed

    private void btnJpMProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJpMProductosActionPerformed
        initProd();
    }//GEN-LAST:event_btnJpMProductosActionPerformed

    private void btnJpMEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJpMEmpleadosActionPerformed

        initEmp();
    }//GEN-LAST:event_btnJpMEmpleadosActionPerformed

    private void btnAgregarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPedidoActionPerformed
        agregarPedido();
    }//GEN-LAST:event_btnAgregarPedidoActionPerformed

    private void btnQuitarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarPedidoActionPerformed
        quitarPedido();
    }//GEN-LAST:event_btnQuitarPedidoActionPerformed

    private void btnMostrarTodasVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarTodasVentasActionPerformed
        verTodasVentas();
    }//GEN-LAST:event_btnMostrarTodasVentasActionPerformed

    private void btnCalcularGananciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularGananciaActionPerformed
        calcularGanancia();
    }//GEN-LAST:event_btnCalcularGananciaActionPerformed

    private void btnMostrarDetalleVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarDetalleVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMostrarDetalleVentaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnAgregarPedido;
    private javax.swing.JButton btnCalcularGanancia;
    private javax.swing.JButton btnImpVentas;
    public static javax.swing.JButton btnJpMClientes;
    public static javax.swing.JButton btnJpMEmpleados;
    public static javax.swing.JButton btnJpMProductos;
    public static javax.swing.JButton btnJpReportes;
    public static javax.swing.JButton btnJpVenta;
    public static javax.swing.JButton btnMostrarDetalleVenta;
    public static javax.swing.JButton btnMostrarTodasVentas;
    public static javax.swing.JButton btnQuitarPedido;
    public static javax.swing.JButton btnRegistrarVenta;
    public static javax.swing.JButton btnSeleccionarCli;
    public static javax.swing.JButton btnSeleccionarProd;
    private javax.swing.JComboBox<String> cboVFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    public static javax.swing.JMenuBar jMenuBar1;
    public static javax.swing.JScrollPane jSPDVenta;
    public static javax.swing.JScrollPane jSPReVenta;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    public static com.toedter.calendar.JDateChooser jdcFechaBoleta;
    public static javax.swing.JPanel jpBase;
    private javax.swing.JPanel jpBuscarCliente;
    private javax.swing.JPanel jpBuscarProducto;
    public static javax.swing.JPanel jpCardOpc;
    public static javax.swing.JPanel jpMenu;
    public static javax.swing.JPanel jpRealizarVenta;
    public static javax.swing.JPanel jpReportes;
    public static javax.swing.JPanel jpSistemaon;
    private static javax.swing.JPanel jpTitulo;
    public static javax.swing.JPanel jpVerVentas;
    public static javax.swing.JLabel lblAtendidoPor;
    private javax.swing.JLabel lblIcoUser;
    public static javax.swing.JLabel lblNBoleta;
    private javax.swing.JLabel lblNombNegocio;
    public static javax.swing.JLabel lblNombUser;
    public static javax.swing.JLabel lblSCodEmpleado;
    public static javax.swing.JMenuItem mnItemCerrarSesion;
    public static javax.swing.JMenuItem mnItemSalir;
    public static javax.swing.JMenu mnSistema;
    public static javax.swing.JSpinner spiSCantidad;
    public static javax.swing.JTable tblDVenta;
    public static javax.swing.JTable tblVVenta;
    private javax.swing.JTextField txtGanancia;
    public static javax.swing.JTextField txtMontoFinal;
    public static javax.swing.JTextField txtSCodCli;
    public static javax.swing.JTextField txtSCodPro;
    public static javax.swing.JTextField txtSNombreCli;
    public static javax.swing.JTextField txtSNombreProd;
    public static javax.swing.JTextField txtSPrecioProd;
    public static javax.swing.JTextField txtSStock;
    // End of variables declaration//GEN-END:variables

    public void numeroBoleta() {
        int nextBoleta = 0;
        try {
            cc.conectarBD();
            Statement st = cc.conexion.createStatement();
            ResultSet rs = st.executeQuery("select codVenta from Venta");
            while (rs.next()) {
                nextBoleta = rs.getInt(1);
            }
            nextBoleta += 1;
            lblNBoleta.setText(String.valueOf(nextBoleta));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            cc.desconectarBD();
        }
    }

    private void registrarVenta() {
        boolean validar = jdcFechaBoleta.getDate() == null || txtSNombreCli.getText().equals("")
                || mdlTblDVenta.getRowCount() <= 0;

        if (!validar) {
            int seguro = JOptionPane.showConfirmDialog(null, "Estas seguro de registrar esta venta. Una vez registrada no podrá ser eliminada.");
            if (seguro == 0) {
                try {
                    cc.conectarBD();
                    PreparedStatement ps = cc.conexion.prepareStatement("insert into Venta values (?, ?, ?, ?)");
                    ps.setDate(1, fechaVenta());
                    ps.setString(2, totalVenta());
                    ps.setString(3, codEmpleado1());
                    ps.setString(4, codCliente1());
                    ps.executeUpdate();
                    /* Tabla Detalle de Venta */
                    int filas = mdlTblDVenta.getRowCount();
                    for (int i = 0; i < filas; i++) {
                        PreparedStatement psDv = cc.conexion.prepareStatement("insert into DetalleVenta values (?,?,?,?,?,?)");
                        psDv.setInt(1, codVenta());
                        psDv.setInt(2, codProdcto(i));
                        psDv.setString(3, codCliente1());
                        psDv.setString(4, codEmpleado1());
                        psDv.setInt(5, cantidad(i));
                        psDv.setFloat(6, importe(i));
                        psDv.executeUpdate();
                    }
                    //creacionBoleta();
                    limpiarVenta();
                    JOptionPane.showMessageDialog(null, "Boleta Registrada.");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                } finally {
                    cc.desconectarBD();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Rellene todos los campos.");
        }
    }

    private void agregarPedido() {
        boolean validar = txtSNombreProd.equals("");
        int codProd = Integer.parseInt(txtSCodPro.getText());
        int stockA = Integer.parseInt(txtSStock.getText());
        if (!validar) {
            if (validarStockCantidad()) {
                int cantidad = (int) spiSCantidad.getValue();
                float precioV = Float.parseFloat(txtSPrecioProd.getText());
                float importe = cantidad * precioV;
                mdlTblDVenta.addRow(new Object[]{
                    codProd,
                    txtSNombreProd.getText(),
                    txtSPrecioProd.getText(),
                    spiSCantidad.getValue(),
                    String.valueOf(String.format("%.2f", importe).replace(",", "."))
                });
                try {
                    cc.conectarBD();
                    PreparedStatement ps = cc.conexion.prepareStatement("update Producto set stock = " + (stockA - cantidad)
                            + " where codProd = " + codProd);
                    txtSStock.setText(String.valueOf((stockA - cantidad)));
                    ps.executeUpdate();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                } finally {
                    cc.desconectarBD();
                }
                float importes = 0;
                int cantFilas = mdlTblDVenta.getRowCount();
                for (int i = 0; i < cantFilas; i++) {
                    String sImp = (String) mdlTblDVenta.getValueAt(i, 4);
                    float fImporte = Float.parseFloat(sImp);
                    importes += fImporte;
                }
                txtMontoFinal.setText(String.valueOf(importes));
                limpiarSProd();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un producto.");
        }
    }

    private void quitarPedido() {
        int fila = tblDVenta.getSelectedRow();
        int confir = JOptionPane.showConfirmDialog(null, "Estas seguro de quitar este pedido.");

        if (fila >= 0) {
            if (confir == 0) {
                String im = (String) mdlTblDVenta.getValueAt(fila, 4);
                float importe = Float.parseFloat(im);
                try {
                    int cod = (int) mdlTblDVenta.getValueAt(fila, 0);
                    int cantidad = (int) mdlTblDVenta.getValueAt(fila, 3);
                    cc.conectarBD();
                    Statement st = cc.conexion.createStatement();
                    ResultSet rs = st.executeQuery("select stock from Producto where codProd = " + cod);
                    rs.next();
                    int nuevoStock = rs.getInt(1) + cantidad;
                    PreparedStatement ps2 = cc.conexion.prepareStatement("update Producto set stock = " + nuevoStock
                            + " where codProd = " + cod);
                    ps2.executeUpdate();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                } finally {
                    cc.desconectarBD();
                }
                float importes = 0;
                mdlTblDVenta.removeRow(fila);
                int cantFilas = mdlTblDVenta.getRowCount();
                for (int i = 0; i < cantFilas; i++) {
                    importes += importe;
                }
                txtMontoFinal.setText(String.valueOf(importes));
                spiSCantidad.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una fila.");
        }
    }

    public boolean validarStockCantidad() {
        int cantidad = (int) spiSCantidad.getValue();
        int stockActual = Integer.parseInt(txtSStock.getText());
        if (cantidad > 0) {
            if (stockActual >= cantidad) {
                return true;
            } else {
                JOptionPane.showMessageDialog(null, "El stock no abarca la cantidad seleccionada.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No ha elegido una unidad.");
            spiSCantidad.setValue(0);
        }
        return false;
    }

    private java.sql.Date fechaVenta() {
        java.util.Date jdate;
        jdate = jdcFechaBoleta.getDate();
        java.sql.Date fecha = new java.sql.Date(jdate.getTime());
        return fecha;
    }

    private String totalVenta() {
        return txtMontoFinal.getText();
    }

    private String codEmpleado1() {
        return lblSCodEmpleado.getText();
    }

    private String codCliente1() {
        return txtSCodCli.getText();
    }

    private int codVenta() {
        return Integer.parseInt(lblNBoleta.getText());
    }

    private int codProdcto(int i) {
        int codPro = (int) mdlTblDVenta.getValueAt(i, 0);
        return codPro;
    }

    private int cantidad(int i) {
        int cantidad = (int) mdlTblDVenta.getValueAt(i, 3);
        return cantidad;
    }

    private float importe(int i) {
        String fl = (String) mdlTblDVenta.getValueAt(i, 4);
        float importe = Float.parseFloat(fl);
        return importe;
    }

    public void limpiarVenta() {
        // Fecha
        jdcFechaBoleta.setDate(null);
        // Datos Cliente
        txtSCodCli.setText("");
        txtSNombreCli.setText("");
        // Datos Producto
        limpiarSProd();
        // Detalle Venta
        int filas = mdlTblDVenta.getRowCount();
        for (int i = 0; i < filas; i++) {
            mdlTblDVenta.removeRow(0);
        }
        // Monto Final
        txtMontoFinal.setText("");
        /* nueva boleta*/
        numeroBoleta();
    }

    private void limpiarSProd() {
        txtSCodPro.setText("");
        txtSNombreProd.setText("");
        txtSPrecioProd.setText("");
        txtSStock.setText("");
        spiSCantidad.setValue(0);
    }

    /* Iniciar CRUDs */
    private void initProd() {
        CRUDProducto crudProd = new CRUDProducto();
        /* Dando privilegios */
        if (lblNombUser.getText().equals("Administrador")) {
            /* Productos */
            crudProd.btnNuevoProd.show();
            crudProd.btnEliminarProd.show();
            crudProd.btnExtraerProd.show();
            crudProd.setVisible(true);
        }

        if (lblNombUser.getText().equals("Cajero")) {
            /* Productos */
            crudProd.btnNuevoProd.hide();
            crudProd.btnEliminarProd.hide();
            crudProd.btnExtraerProd.hide();
            crudProd.setVisible(true);
        }
    }

    private void initCli() {
        CRUDCliente crudCli = new CRUDCliente();
        crudCli.setVisible(true);
    }

    private void initEmp() {
        CRUDEmpleado crudEmp = new CRUDEmpleado();
        crudEmp.setVisible(true);
    }

    /* REPORTES */
    private void verTodasVentas() {
        try {
            cc.conectarBD();
            PreparedStatement ps = cc.conexion.prepareStatement("select codVenta, codCli,nombApeCli,fechaVenta, totalVenta, codEmp, nombApeEmp\n "
                    + "from Venta\n "
                    + "inner join Cliente on Venta.codCli1 = Cliente.codCli\n "
                    + "inner join Empleado on Venta.codEmp1 = Empleado.codEmp ");
            ResultSet rs = ps.executeQuery();
            //limpiar la tabla
            int filas = mdlVVentas.getRowCount();
            for (int i = 0; i < filas; i++) {
                mdlVVentas.removeRow(0);
            }
            while (rs.next()) {
                Float tot = rs.getFloat(5);
                mdlVVentas.addRow(new Object[]{
                    rs.getInt(1),//codVenta
                    rs.getString(2),//codCli
                    rs.getString(3),//Cliente
                    rs.getDate(4),//fechaVenta
                    Math.ceil(tot),//TotalVenta
                    rs.getString(6),//codEmp
                    rs.getString(7)//Empleado
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            cc.desconectarBD();
        }
    }

    private void verDetalleVenta() {
        int filas = tblVVenta.getSelectedRow();
        if (filas >= 0) {
            VDVenta vDV = new VDVenta();
            vDV.setVisible(true);
            int codVenta = (int) tblVVenta.getValueAt(filas, 0);
            try {
                cc.conectarBD();
                PreparedStatement ps = cc.conexion.prepareStatement("select Producto.codProd,articulo, precioVenta,cantidad, importe\n "
                        + "from Venta\n "
                        + "inner join DetalleVenta on Venta.codVenta = DetalleVenta.codVenta\n "
                        + "inner join Producto on DetalleVenta.codProd = Producto.codProd\n "
                        + "where Venta.codVenta = " + codVenta);
                ResultSet rs = ps.executeQuery();
                //limpiar la tabla detalle de venta
                int filas2 = vDV.mdlVDVentas.getRowCount();
                for (int i = 0; i < filas2; i++) {
                    mdlVVentas.removeRow(0);
                }
                while (rs.next()) {
                    Float imp = rs.getFloat(5);
                    vDV.mdlVDVentas.addRow(new Object[]{
                        rs.getString(1),//codProd
                        rs.getString(2),//articulo
                        rs.getString(3),//precio
                        rs.getString(4),//cantidad
                        Math.ceil(imp),//importe
                    });
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "here" + e);
            } finally {
                cc.desconectarBD();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una venta.");
        }

    }

    private void calcularGanancia() {
        int filas = mdlVVentas.getRowCount();
        float ganancia = 0;
        if (filas >= 0) {
            for (int i = 0; i < filas; i++) {
                ganancia += (Double) mdlVVentas.getValueAt(i, 4);
            }
            txtGanancia.setText("S/ " + ganancia);
        }
    }

    
    
    /* Menus */
    private void cerrarSesion() {
        Login lg = new Login();
        lg.setVisible(true);
        this.dispose();
    }
    
    private void salirSistema() {
        int a = JOptionPane.showConfirmDialog(null, "Estas seguro de salir");
        if (a == 0) {
            int filas = mdlTblDVenta.getRowCount();
            for (int i = 0; i < filas; i++) {
                try {
                    int cod = (int) mdlTblDVenta.getValueAt(i, 0);
                    int cantidad = (int) mdlTblDVenta.getValueAt(i, 3);
                    cc.conectarBD();
                    Statement st = cc.conexion.createStatement();
                    ResultSet rs = st.executeQuery("select stock from Producto where codProd = " + cod);
                    rs.next();
                    int nuevoStock = rs.getInt(1) + cantidad;
                    PreparedStatement ps2 = cc.conexion.prepareStatement("update Producto set stock = " + nuevoStock
                            + " where codProd = " + cod);
                    ps2.executeUpdate();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                } finally {
                    cc.desconectarBD();
                }
            }
            System.exit(0);
        }
    }

    public void cambiarJPanel(JPanel card, JPanel jp) {
        card.removeAll();
        card.repaint();
        card.add(jp);
        card.repaint();
        card.revalidate();
    }

}
