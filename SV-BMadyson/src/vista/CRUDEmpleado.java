/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import dao.Conexion;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cbherit
 */
public class CRUDEmpleado extends javax.swing.JFrame {

    Conexion cc = new Conexion();
    DefaultTableModel mdlTblEmp;

    public CRUDEmpleado() {
        initComponents();
        this.setLocationRelativeTo(null);
        tabla();
    }

    public void tabla() {
        mdlTblEmp = (DefaultTableModel) tblEmpleado.getModel();
        jSPEmp.getViewport().setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpMUsuarios = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jpOpcionesEmp = new javax.swing.JPanel();
        btnNuevoEmp = new javax.swing.JButton();
        btnRegistrarEmp = new javax.swing.JButton();
        btnConsultarEmp = new javax.swing.JButton();
        btnActualizarEmp = new javax.swing.JButton();
        btnEliminarEmp = new javax.swing.JButton();
        jpCardEmp = new javax.swing.JPanel();
        jpConsultaEmp = new javax.swing.JPanel();
        jSPEmp = new javax.swing.JScrollPane();
        tblEmpleado = new javax.swing.JTable();
        btnExtraerEmp = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        btnListarEmp = new javax.swing.JButton();
        txtFiltroNombreEmp = new javax.swing.JTextField();
        jpDatosEmp = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        txtNombresEmp = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtUsuarioEmp = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        txtDniEmp = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtContraEmp = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtCodigoEmp = new javax.swing.JTextField();
        cboGeneroEmp = new javax.swing.JComboBox<>();
        cboCargoEmp = new javax.swing.JComboBox<>();
        cboEstadoEmp1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jpMUsuarios.setBackground(new java.awt.Color(0, 51, 51));
        jpMUsuarios.setPreferredSize(new java.awt.Dimension(400, 150));
        jpMUsuarios.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 153, 0));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/usuario125x125.png"))); // NOI18N
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel25.setMaximumSize(new java.awt.Dimension(130, 130));
        jLabel25.setMinimumSize(new java.awt.Dimension(130, 130));
        jLabel25.setPreferredSize(new java.awt.Dimension(130, 130));
        jLabel25.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jpMUsuarios.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 10, 130, 130));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("MANTENIMIENTO DE EMPLEADOS");
        jpMUsuarios.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 15, 970, 30));

        jpOpcionesEmp.setBackground(new java.awt.Color(0, 51, 51));

        btnNuevoEmp.setBackground(new java.awt.Color(204, 204, 204));
        btnNuevoEmp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNuevoEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/new32x32.png"))); // NOI18N
        btnNuevoEmp.setText("NUEVO");
        btnNuevoEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevoEmp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevoEmp.setPreferredSize(new java.awt.Dimension(120, 75));
        btnNuevoEmp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevoEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoEmpActionPerformed(evt);
            }
        });
        jpOpcionesEmp.add(btnNuevoEmp);

        btnRegistrarEmp.setBackground(new java.awt.Color(204, 204, 204));
        btnRegistrarEmp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRegistrarEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/save32x32.png"))); // NOI18N
        btnRegistrarEmp.setText("REGISTRAR");
        btnRegistrarEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrarEmp.setEnabled(false);
        btnRegistrarEmp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegistrarEmp.setPreferredSize(new java.awt.Dimension(120, 75));
        btnRegistrarEmp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegistrarEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarEmpActionPerformed(evt);
            }
        });
        jpOpcionesEmp.add(btnRegistrarEmp);

        btnConsultarEmp.setBackground(new java.awt.Color(204, 204, 204));
        btnConsultarEmp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConsultarEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/search32x32.png"))); // NOI18N
        btnConsultarEmp.setText("CONSULTAR");
        btnConsultarEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConsultarEmp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnConsultarEmp.setPreferredSize(new java.awt.Dimension(120, 75));
        btnConsultarEmp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnConsultarEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarEmpActionPerformed(evt);
            }
        });
        jpOpcionesEmp.add(btnConsultarEmp);

        btnActualizarEmp.setBackground(new java.awt.Color(204, 204, 204));
        btnActualizarEmp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnActualizarEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/update32x32.png"))); // NOI18N
        btnActualizarEmp.setText("ACTUALIZAR");
        btnActualizarEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizarEmp.setEnabled(false);
        btnActualizarEmp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnActualizarEmp.setPreferredSize(new java.awt.Dimension(120, 75));
        btnActualizarEmp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnActualizarEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarEmpActionPerformed(evt);
            }
        });
        jpOpcionesEmp.add(btnActualizarEmp);

        btnEliminarEmp.setBackground(new java.awt.Color(204, 204, 204));
        btnEliminarEmp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEliminarEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/delete32x32.png"))); // NOI18N
        btnEliminarEmp.setText("ELIMINAR");
        btnEliminarEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarEmp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminarEmp.setPreferredSize(new java.awt.Dimension(120, 75));
        btnEliminarEmp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminarEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEmpActionPerformed(evt);
            }
        });
        jpOpcionesEmp.add(btnEliminarEmp);

        jpMUsuarios.add(jpOpcionesEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 50, 970, 85));

        jpCardEmp.setLayout(new java.awt.CardLayout());

        jpConsultaEmp.setBackground(new java.awt.Color(255, 255, 255));
        jpConsultaEmp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSPEmp.setBackground(new java.awt.Color(255, 255, 255));
        jSPEmp.setOpaque(false);

        tblEmpleado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblEmpleado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblEmpleado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ“DIGO", "NOMBRES Y APELLIDOS", "CARGO", "DNI", "GÃ‰NERO", "ESTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmpleado.setOpaque(false);
        tblEmpleado.setSelectionBackground(new java.awt.Color(0, 51, 51));
        tblEmpleado.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblEmpleado.getTableHeader().setResizingAllowed(false);
        tblEmpleado.getTableHeader().setReorderingAllowed(false);
        jSPEmp.setViewportView(tblEmpleado);

        jpConsultaEmp.add(jSPEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 930, 280));

        btnExtraerEmp.setBackground(new java.awt.Color(255, 255, 255));
        btnExtraerEmp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExtraerEmp.setText("MODIFICAR USUARIO");
        btnExtraerEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtraerEmpActionPerformed(evt);
            }
        });
        jpConsultaEmp.add(btnExtraerEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 220, 30));

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setText("FILTRAR POR NOMBRE O APELLIDO:");
        jpConsultaEmp.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 260, 30));

        btnListarEmp.setBackground(new java.awt.Color(255, 255, 255));
        btnListarEmp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnListarEmp.setText("LISTAR");
        btnListarEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarEmpActionPerformed(evt);
            }
        });
        jpConsultaEmp.add(btnListarEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 15, 120, 40));

        txtFiltroNombreEmp.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jpConsultaEmp.add(txtFiltroNombreEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 300, 30));

        jpCardEmp.add(jpConsultaEmp, "card3");

        jpDatosEmp.setBackground(new java.awt.Color(255, 255, 255));
        jpDatosEmp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("NOMBRES Y APELLIDOS:");
        jpDatosEmp.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 200, 30));

        txtNombresEmp.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtNombresEmp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNombresEmp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNombresEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNombresEmp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresEmpKeyTyped(evt);
            }
        });
        jpDatosEmp.add(txtNombresEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 300, 30));

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("CARGO:");
        jpDatosEmp.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 200, 30));

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel35.setText("USUARIO:");
        jpDatosEmp.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 200, 30));

        txtUsuarioEmp.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtUsuarioEmp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtUsuarioEmp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtUsuarioEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jpDatosEmp.add(txtUsuarioEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 220, 30));

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("D.N.I.:");
        jpDatosEmp.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 200, 30));

        txtDniEmp.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtDniEmp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDniEmp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDniEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtDniEmp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniEmpKeyTyped(evt);
            }
        });
        jpDatosEmp.add(txtDniEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 220, 30));

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel37.setText("CONTRASEÃ‘A:");
        jpDatosEmp.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 200, 30));

        txtContraEmp.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtContraEmp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtContraEmp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtContraEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jpDatosEmp.add(txtContraEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, 220, 30));

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel38.setText("GÃ‰NERO:");
        jpDatosEmp.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, 200, 30));

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel39.setText("ESTADO:");
        jpDatosEmp.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, 200, 30));

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel40.setText("CÃ“DIGO:");
        jpDatosEmp.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 200, 30));

        txtCodigoEmp.setEditable(false);
        txtCodigoEmp.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtCodigoEmp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigoEmp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCodigoEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jpDatosEmp.add(txtCodigoEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 220, 30));

        cboGeneroEmp.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboGeneroEmp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "Masculino", "Femenino" }));
        cboGeneroEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jpDatosEmp.add(cboGeneroEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 90, 220, 30));

        cboCargoEmp.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboCargoEmp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "Administrador", "Cajero" }));
        cboCargoEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jpDatosEmp.add(cboCargoEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 220, 30));

        cboEstadoEmp1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboEstadoEmp1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        cboEstadoEmp1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jpDatosEmp.add(cboEstadoEmp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 140, 220, 30));

        jpCardEmp.add(jpDatosEmp, "card4");

        jpMUsuarios.add(jpCardEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 140, 970, 400));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1135, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jpMUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 1135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 572, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jpMUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoEmpActionPerformed
        nuevo();
    }//GEN-LAST:event_btnNuevoEmpActionPerformed

    private void btnConsultarEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarEmpActionPerformed
        consultar();
    }//GEN-LAST:event_btnConsultarEmpActionPerformed

    private void btnExtraerEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtraerEmpActionPerformed
        extraer();
    }//GEN-LAST:event_btnExtraerEmpActionPerformed

    private void btnListarEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarEmpActionPerformed
        listar();
    }//GEN-LAST:event_btnListarEmpActionPerformed

    private void btnEliminarEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEmpActionPerformed
        eliminar();
    }//GEN-LAST:event_btnEliminarEmpActionPerformed

    private void btnActualizarEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarEmpActionPerformed
        actualizar();
    }//GEN-LAST:event_btnActualizarEmpActionPerformed

    private void btnRegistrarEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarEmpActionPerformed
        registrar();
    }//GEN-LAST:event_btnRegistrarEmpActionPerformed

    private void txtDniEmpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniEmpKeyTyped
        soloDni(evt);
    }//GEN-LAST:event_txtDniEmpKeyTyped

    private void txtNombresEmpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresEmpKeyTyped
        soloLetras(evt);
    }//GEN-LAST:event_txtNombresEmpKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUDEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUDEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUDEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUDEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUDEmpleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnActualizarEmp;
    public static javax.swing.JButton btnConsultarEmp;
    public static javax.swing.JButton btnEliminarEmp;
    public static javax.swing.JButton btnExtraerEmp;
    public static javax.swing.JButton btnListarEmp;
    public static javax.swing.JButton btnNuevoEmp;
    public static javax.swing.JButton btnRegistrarEmp;
    private javax.swing.JComboBox<String> cboCargoEmp;
    private javax.swing.JComboBox<String> cboEstadoEmp1;
    private javax.swing.JComboBox<String> cboGeneroEmp;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    public static javax.swing.JScrollPane jSPEmp;
    public static javax.swing.JPanel jpCardEmp;
    public static javax.swing.JPanel jpConsultaEmp;
    public static javax.swing.JPanel jpDatosEmp;
    public static javax.swing.JPanel jpMUsuarios;
    public static javax.swing.JPanel jpOpcionesEmp;
    public static javax.swing.JTable tblEmpleado;
    public static javax.swing.JTextField txtCodigoEmp;
    public static javax.swing.JTextField txtContraEmp;
    public static javax.swing.JTextField txtDniEmp;
    public static javax.swing.JTextField txtFiltroNombreEmp;
    public static javax.swing.JTextField txtNombresEmp;
    public static javax.swing.JTextField txtUsuarioEmp;
    // End of variables declaration//GEN-END:variables
    private boolean validarCampos() {
        boolean verificar = nombres().equals("")
                || cboCargoEmp.getSelectedIndex() == 0
                || dni().equals("")
                || usuario().equals("")
                || contrasenia().equals("")
                || cboGeneroEmp.getSelectedIndex() == 0;
        return verificar;
    }

    private void registrar() {
        try {
            if (!validarCampos()) {
                cc.conectarBD();
                PreparedStatement ps = cc.conexion.prepareStatement("insert into Empleado values (?, ?, ?, ?, ?, ?, ?)");
                ps.setString(1, nombres());
                ps.setString(2, cargo());
                ps.setString(3, dni());
                ps.setString(4, usuario());
                ps.setString(5, contrasenia());
                ps.setString(6, genero());
                ps.setInt(7, estado());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Empleado Registrado");
                btnRegistrarEmp.setEnabled(false);
                traerCodEmp();
            } else {
                JOptionPane.showMessageDialog(null, "Rellene los campos faltantes.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "registrar " + e);
        } finally {
            cc.desconectarBD();
        }
    }

    private void extraer() {
        try {
            int fila = tblEmpleado.getSelectedRow();
            if (fila >= 0) {
                String cod = (String) tblEmpleado.getValueAt(fila, 0);
                cc.conectarBD();
                Statement st = cc.conexion.createStatement();
                ResultSet rs = st.executeQuery("select * from Empleado where codEmp = " + cod);
                String datos[] = new String[7];
                rs.next();
                datos[0] = rs.getString(2);
                datos[1] = rs.getString(3);
                datos[2] = rs.getString(4);
                datos[3] = rs.getString(5);
                datos[4] = rs.getString(6);
                datos[5] = rs.getString(7);
                datos[6] = rs.getString(8);

                txtCodigoEmp.setText(cod);
                txtNombresEmp.setText(datos[0]);
                cboCargoEmp.setSelectedItem(datos[1]);
                txtDniEmp.setText(datos[2]);
                txtUsuarioEmp.setText(datos[3]);
                txtContraEmp.setText(datos[4]);
                String genero = datos[5];
                switch (genero) {
                    case "M":
                        cboGeneroEmp.setSelectedIndex(1);
                        break;
                    case "F":
                        cboGeneroEmp.setSelectedIndex(2);
                        break;
                    default:
                        cboGeneroEmp.setSelectedIndex(0);
                        break;
                }
                String estado = datos[6];
                switch (estado) {
                    case "1":
                        cboGeneroEmp.setSelectedIndex(0);
                        break;
                    case "0":
                        cboGeneroEmp.setSelectedIndex(1);
                        break;
                    default:
                        cboGeneroEmp.setSelectedIndex(0);
                        break;
                }
                /**/
                btnActualizarEmp.setEnabled(true);
                btnEliminarEmp.setEnabled(false);
                cambiarJPanel(jpCardEmp, jpDatosEmp);
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione una fila de la tabla para modificar.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "extraer " + e);
        } finally {
            cc.desconectarBD();
        }
    }

    private void actualizar() {
        try {
            if (!validarCampos()) {
                cc.conectarBD();
            PreparedStatement ps = cc.conexion.prepareStatement("update Empleado set nombApeEmp = '" + nombres()
                    + "', cargoEmp = '" + cargo() + "', dniEmp = '" + dni() + "', usuEmp = '" + usuario()
                    + "', contraEmp = '" + contrasenia() + "', genEmp = '" + genero() + "', estado = '" + estado()
                    + "'  where codEmp = " + codigo());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Datos Actualizados");
            btnActualizarEmp.setEnabled(false);
            btnNuevoEmp.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "Rellene los campos faltantes.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "actualizar " + e);
        } finally {
            cc.desconectarBD();
        }
    }

    private void eliminar() {
        int fila = tblEmpleado.getSelectedRow();
        if (fila >= 0) {
            int confirmar = JOptionPane.showConfirmDialog(null, "Â¿Estas seguro de eliminar el empleado?");
            if (confirmar == 0) {
                String cod = (String) tblEmpleado.getValueAt(fila, 0);
                try {
                    cc.conectarBD();
                    PreparedStatement ps = cc.conexion.prepareStatement("delete from Empleado where codEmp = " + cod);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Empleado eliminado");
                    listar();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "eliminar " + e);
                } finally {
                    cc.desconectarBD();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una fila.");
        }
    }

    private void listar() {
        //limpiar la tabla
        int filas = mdlTblEmp.getRowCount();
        for (int i = 0; i < filas; i++) {
            mdlTblEmp.removeRow(0);
        }
        /**
         * ** TRAER DATOS DE SQL SERVER HACIA LA TABLA ***
         */
        try {
            String datos[] = new String[6];
            cc.conectarBD();
            Statement st = cc.conexion.createStatement();
            ResultSet rs = st.executeQuery(buscar());

            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                String usuario = rs.getString(5);//ocultar
                String contrasenia = rs.getString(6);//ocultar
                datos[4] = rs.getString(7);
                String estado = "";
                switch (rs.getInt(8)) {
                    case 1:
                        estado = "Activo";
                        break;
                    case 0:
                        estado = "Inactivo";
                        break;
                    default:
                        break;
                }
                datos[5] = estado;
                mdlTblEmp.addRow(datos);
            }
            txtFiltroNombreEmp.requestFocus();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "listar " + e);
        } finally {
            cc.desconectarBD();
        }
    }

    private void consultar() {
        cambiarJPanel(jpCardEmp, jpConsultaEmp);
        listar();
        btnActualizarEmp.setEnabled(false);
        btnRegistrarEmp.setEnabled(false);
        btnEliminarEmp.setEnabled(true);
        btnNuevoEmp.setEnabled(true);
    }

    private String buscar() {
        String consultar = "";
        try {
            if (filtroNombre().equals("")) {
                consultar = "select * from Empleado";
            } else {
                consultar = "select * from Empleado where nombApeEmp  like '%" + filtroNombre() + "%'";
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se pudo mostrar los datos");
        }
        return consultar;
    }

    private void nuevo() {
        cambiarJPanel(jpCardEmp, jpDatosEmp);
        traerCodEmp();
        txtNombresEmp.setText("");
        cboCargoEmp.setSelectedIndex(0);
        txtDniEmp.setText("");
        cboGeneroEmp.setSelectedIndex(0);
        cboGeneroEmp.setSelectedIndex(0);
        txtUsuarioEmp.setText("");
        txtContraEmp.setText("");
        btnRegistrarEmp.setEnabled(true);
        btnActualizarEmp.setEnabled(false);
        btnEliminarEmp.setEnabled(false);
    }

    /* Filtros */
    private String filtroNombre() {
        return txtFiltroNombreEmp.getText();
    }

    /* Modificar */
    private int codigo() {
        return Integer.parseInt(txtCodigoEmp.getText());
    }

    /* REGISTRAR*/
    private String nombres() {
        return txtNombresEmp.getText();
    }

    private String cargo() {
        return (String) cboCargoEmp.getSelectedItem();
    }

    private String dni() {
        return txtDniEmp.getText();
    }

    private String usuario() {
        return txtUsuarioEmp.getText();
    }

    private String contrasenia() {
        return txtContraEmp.getText();
    }

    private String genero() {
        int genero = cboGeneroEmp.getSelectedIndex();
        String gen = null;
        switch (genero) {
            case 1:
                gen = "M";
                break;
            case 2:
                gen = "F";
                break;
            default:
                break;
        }
        return gen;
    }

    private int estado() {
        int estado = cboGeneroEmp.getSelectedIndex();
        int est = 1;
        switch (estado) {
            case 0:
                est = 1;
                break;
            case 1:
                est = 0;
                break;
            default:
                break;
        }
        return est;
    }

    private void cambiarJPanel(JPanel card, JPanel jp) {
        card.removeAll();
        card.repaint();
        card.add(jp);
        card.repaint();
        card.revalidate();
    }

    private void traerCodEmp() {
        int nextEmp = 0;
        try {
            cc.conectarBD();
            Statement st = cc.conexion.createStatement();
            ResultSet rs = st.executeQuery("select codEmp from Empleado");
            while (rs.next()) {
                nextEmp = rs.getInt(1);
            }
            nextEmp += 1;
            txtCodigoEmp.setText(String.valueOf(nextEmp));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            cc.desconectarBD();
        }
    }

    private void soloLetras(KeyEvent evt) {
        Character c = evt.getKeyChar();
        if (Character.isAlphabetic(c) || Character.isWhitespace(c)) {

        } else {
            evt.consume();
        }
    }

    private void soloDni(KeyEvent evt) {
        Character c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            if (txtDniEmp.getText().length() == 8) {
                evt.consume();
            }
        } else {
            evt.consume();
        }
    }
}
